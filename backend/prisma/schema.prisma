// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  binaryTargets = ["native", "linux-musl"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          String   @id @default(uuid()) @unique
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  name        String?
  age         Int?
  fileSource  String? // Location of uploaded file
  email       String   @unique
  password    String   // Store hashed passwords!
  role        Role     @default(USER) // Frontend/user-defined Role
  assignedRole Role     @default(USER) // Role assigned by system

  googleId    String?  @unique // For future OAuth

  approvals Approval[]

  @@map("users")
}

model Approval {
  id            String   @id @default(uuid()) @unique
  createdAt   DateTime @default(now())
  userId        String
  user          User     @relation(fields: [userId], references: [id])
  status        ApprovalStatus @default(PENDING)
  requiredRole  Role
  approvedBy    String?  @db.Uuid
  rejectedBy    String?  @db.Uuid

  @@map("approvals")
}

enum Role {
  SUPER
  ADMIN
  USER

  @@map("roles")
}

enum ApprovalStatus {
  PENDING
  REJECTED
  APPROVED

  @@map("approval_statuses")
}